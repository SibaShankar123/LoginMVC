@model LoginMVC.Models.UserRegister

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>User Registration</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @placeholder = "Enter your username" })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Enter your email" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Enter a secure password", @id = "password" })
                <span class="input-group-addon">
                    <button type="button" class="btn btn-default toggle-password" tabindex="-1">
                        <i class="glyphicon glyphicon-eye-open"></i>
                    </button>
                </span>
            </div>
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.UserType,
                new SelectList(Enum.GetValues(typeof(LoginMVC.Models.UserType))),
                "Select User Type",
                new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-danger">Register</button>
        </div>
    </div>

    <div>
        <h4>Register using a social account</h4>
        <a href="@Url.Action("ExternalLogin", "Account", new { provider = "Google", returnUrl = "/" })" class="btn btn-danger">
            Register with Google
        </a>
        <a href="@Url.Action("ExternalLogin", "Account", new { provider = "Facebook", returnUrl = "/" })" class="btn btn-primary">
            Register with Facebook
        </a>
    </div>
</div>
}

@if (ViewBag.Message != null)
{
    <div class="alert alert-warning">
        @ViewBag.Message
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<div>
    <p>Already have an account? @Html.ActionLink("Login here", "Login")</p>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $(".toggle-password").on("click", function () {
                const passwordField = $("#password");
                const passwordFieldType = passwordField.attr("type");
                const icon = $(this).find("i");
                if (passwordFieldType === "password") {
                    passwordField.attr("type", "text");
                    icon.removeClass("glyphicon-eye-open").addClass("glyphicon-eye-close");
                } else {
                    passwordField.attr("type", "password");
                    icon.removeClass("glyphicon-eye-close").addClass("glyphicon-eye-open");
                }
            });
        });
    </script>
}

